# Generated by Django 5.2.1 on 2025-07-17 13:53

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('xcoursefee', '0002_kit_coursekit_kitfee'),
        ('xstudent', '0006_attendance_attendancesummary'),
        ('xtrainer', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_code', models.CharField(max_length=20, unique=True, verbose_name='Batch Code')),
                ('name', models.CharField(max_length=200, verbose_name='Batch Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('time_slot', models.CharField(choices=[('morning', 'Morning (8:00 AM - 12:00 PM)'), ('afternoon', 'Afternoon (1:00 PM - 5:00 PM)'), ('evening', 'Evening (6:00 PM - 10:00 PM)'), ('weekend', 'Weekend'), ('custom', 'Custom Time')], default='morning', max_length=20)),
                ('custom_time_start', models.TimeField(blank=True, null=True, verbose_name='Custom Start Time')),
                ('custom_time_end', models.TimeField(blank=True, null=True, verbose_name='Custom End Time')),
                ('max_students', models.PositiveIntegerField(default=30, verbose_name='Maximum Students')),
                ('current_students', models.PositiveIntegerField(default=0, verbose_name='Current Student Count')),
                ('whatsapp_group_name', models.CharField(blank=True, max_length=200, verbose_name='WhatsApp Group Name')),
                ('whatsapp_group_link', models.URLField(blank=True, verbose_name='WhatsApp Group Link')),
                ('whatsapp_group_id', models.CharField(blank=True, max_length=100, verbose_name='WhatsApp Group ID')),
                ('auto_add_students', models.BooleanField(default=True, verbose_name='Auto Add New Students to WhatsApp Group')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('suspended', 'Suspended')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allow_late_enrollment', models.BooleanField(default=True, verbose_name='Allow Late Enrollment')),
                ('notification_enabled', models.BooleanField(default=True, verbose_name='Enable Notifications')),
                ('assistant_faculty', models.ManyToManyField(blank=True, related_name='assistant_batches', to='xtrainer.faculty', verbose_name='Assistant Faculty')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='xcoursefee.course')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_batches', to=settings.AUTH_USER_MODEL)),
                ('primary_faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_batches', to='xtrainer.faculty', verbose_name='Primary Faculty')),
            ],
            options={
                'verbose_name': 'Batch',
                'verbose_name_plural': 'Batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BatchFacultyChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('primary_change', 'Primary Faculty Change'), ('assistant_add', 'Add Assistant Faculty'), ('assistant_remove', 'Remove Assistant Faculty'), ('temporary_replacement', 'Temporary Replacement')], max_length=25)),
                ('reason', models.TextField(verbose_name='Reason for Change')),
                ('request_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('effective_date', models.DateField(verbose_name='Effective Date')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('implemented', 'Implemented'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('implementation_date', models.DateTimeField(blank=True, null=True)),
                ('implementation_notes', models.TextField(blank=True)),
                ('notify_students', models.BooleanField(default=True, verbose_name='Notify Students')),
                ('notification_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_faculty_changes', to=settings.AUTH_USER_MODEL)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_changes', to='xbatch.batch')),
                ('new_faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_faculty_changes', to='xtrainer.faculty')),
                ('old_faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='old_faculty_changes', to='xtrainer.faculty')),
                ('requested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Batch Faculty Change',
                'verbose_name_plural': 'Batch Faculty Changes',
                'ordering': ['-request_date'],
            },
        ),
        migrations.CreateModel(
            name='BatchTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_reason', models.CharField(choices=[('time_conflict', 'Time Conflict'), ('level_mismatch', 'Level Mismatch'), ('personal_request', 'Personal Request'), ('capacity_issue', 'Capacity Issue'), ('faculty_change', 'Faculty Change'), ('other', 'Other')], max_length=20)),
                ('reason_description', models.TextField(verbose_name='Detailed Reason')),
                ('request_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('approval_notes', models.TextField(blank=True)),
                ('transfer_date', models.DateTimeField(blank=True, null=True)),
                ('effective_date', models.DateField(verbose_name='Effective Transfer Date')),
                ('remove_from_old_group', models.BooleanField(default=True, verbose_name='Remove from Old WhatsApp Group')),
                ('add_to_new_group', models.BooleanField(default=True, verbose_name='Add to New WhatsApp Group')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_transfers', to=settings.AUTH_USER_MODEL)),
                ('from_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_out', to='xbatch.batch')),
                ('requested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requested_transfers', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_transfers', to='xstudent.newstudent')),
                ('to_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_in', to='xbatch.batch')),
            ],
            options={
                'verbose_name': 'Batch Transfer',
                'verbose_name_plural': 'Batch Transfers',
                'ordering': ['-request_date'],
            },
        ),
        migrations.CreateModel(
            name='WhatsAppGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=200, verbose_name='Group Name')),
                ('group_id', models.CharField(max_length=100, unique=True, verbose_name='WhatsApp Group ID')),
                ('group_link', models.URLField(verbose_name='Group Invitation Link')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('archived', 'Archived')], default='active', max_length=20)),
                ('auto_add_members', models.BooleanField(default=True, verbose_name='Auto Add New Students')),
                ('admin_numbers', models.TextField(help_text='Phone numbers of group admins', verbose_name='Admin Phone Numbers (comma separated)')),
                ('total_members', models.PositiveIntegerField(default=0)),
                ('last_sync', models.DateTimeField(blank=True, null=True, verbose_name='Last Member Sync')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='whatsapp_group', to='xbatch.batch')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'WhatsApp Group',
                'verbose_name_plural': 'WhatsApp Groups',
            },
        ),
        migrations.CreateModel(
            name='BatchStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('active', 'Active'), ('transferred', 'Transferred'), ('dropped', 'Dropped'), ('completed', 'Completed'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('added_to_whatsapp', models.BooleanField(default=False, verbose_name='Added to WhatsApp Group')),
                ('whatsapp_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be valid', regex='^\\+?1?\\d{9,15}$')], verbose_name='WhatsApp Phone Number')),
                ('notes', models.TextField(blank=True, verbose_name='Enrollment Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_students', to='xbatch.batch')),
                ('enrolled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_enrollments', to='xstudent.newstudent')),
            ],
            options={
                'verbose_name': 'Batch Student',
                'verbose_name_plural': 'Batch Students',
                'ordering': ['-enrollment_date'],
                'unique_together': {('batch', 'student')},
            },
        ),
    ]
