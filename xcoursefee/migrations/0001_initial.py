# Generated by Django 5.2.1 on 2025-06-18 13:19

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('xstudent', '0006_attendance_attendancesummary'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Course Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('course_code', models.CharField(max_length=20, unique=True, verbose_name='Course Code')),
                ('course_type', models.CharField(choices=[('regular', 'Regular Course'), ('intensive', 'Intensive Course'), ('summer', 'Summer Course'), ('workshop', 'Workshop'), ('tutorial', 'Tutorial')], default='regular', max_length=20)),
                ('duration', models.PositiveIntegerField(verbose_name='Duration')),
                ('duration_unit', models.CharField(choices=[('months', 'Months'), ('weeks', 'Weeks'), ('days', 'Days'), ('hours', 'Hours')], default='months', max_length=10)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('max_students', models.PositiveIntegerField(default=30, verbose_name='Maximum Students')),
                ('min_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Minimum Age')),
                ('max_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maximum Age')),
                ('prerequisites', models.TextField(blank=True, verbose_name='Prerequisites')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('coming_soon', 'Coming Soon')], default='active', max_length=20)),
                ('instructor_name', models.CharField(blank=True, max_length=100, verbose_name='Instructor')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Discount Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed_amount', 'Fixed Amount')], default='percentage', max_length=20)),
                ('value', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Discount Value')),
                ('applicability', models.CharField(choices=[('all_fees', 'All Fees'), ('tuition_only', 'Tuition Only'), ('specific_fee', 'Specific Fee Type')], default='all_fees', max_length=20)),
                ('valid_from', models.DateField(verbose_name='Valid From')),
                ('valid_until', models.DateField(verbose_name='Valid Until')),
                ('max_usage', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maximum Usage')),
                ('current_usage', models.PositiveIntegerField(default=0, verbose_name='Current Usage')),
                ('min_enrollment_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Minimum Enrollments')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('eligible_courses', models.ManyToManyField(blank=True, to='xcoursefee.course', verbose_name='Eligible Courses')),
            ],
            options={
                'verbose_name': 'Discount',
                'verbose_name_plural': 'Discounts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=20, unique=True, verbose_name='Invoice Number')),
                ('issue_date', models.DateField(default=django.utils.timezone.now, verbose_name='Issue Date')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('subtotal', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Subtotal (KWD)')),
                ('discount_amount', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=10, verbose_name='Discount Amount (KWD)')),
                ('total_amount', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Total Amount (KWD)')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applied_discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='xcoursefee.discount', verbose_name='Applied Discount')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='StudentEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Enrollment Date')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('dropped', 'Dropped'), ('suspended', 'Suspended'), ('pending', 'Pending')], default='active', max_length=20)),
                ('enrollment_notes', models.TextField(blank=True, verbose_name='Enrollment Notes')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion Date')),
                ('final_grade', models.CharField(blank=True, max_length=5, verbose_name='Final Grade')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='xcoursefee.course', verbose_name='Course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_enrollments', to='xstudent.newstudent', verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Student Enrollment',
                'verbose_name_plural': 'Student Enrollments',
                'ordering': ['-enrollment_date'],
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Amount (KWD)')),
                ('payment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Payment Date')),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('cheque', 'Cheque'), ('online', 'Online Payment')], max_length=20, verbose_name='Payment Method')),
                ('reference_number', models.CharField(blank=True, max_length=100, verbose_name='Reference Number')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True, verbose_name='Payment Notes')),
                ('receipt_number', models.CharField(blank=True, max_length=50, verbose_name='Receipt Number')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='xcoursefee.invoice', verbose_name='Invoice')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Processed By')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='xcoursefee.studentenrollment', verbose_name='Enrollment')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-payment_date', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='enrollment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='xcoursefee.studentenrollment', verbose_name='Enrollment'),
        ),
        migrations.CreateModel(
            name='FeeStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_type', models.CharField(choices=[('tuition', 'Tuition Fee'), ('registration', 'Registration Fee'), ('materials', 'Materials Fee'), ('exam', 'Examination Fee'), ('library', 'Library Fee'), ('lab', 'Laboratory Fee'), ('transport', 'Transportation Fee'), ('activity', 'Activity Fee'), ('other', 'Other Fee')], max_length=20, verbose_name='Fee Type')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Amount (KWD)')),
                ('payment_frequency', models.CharField(choices=[('one_time', 'One Time'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semester', 'Per Semester'), ('annual', 'Annual')], default='one_time', max_length=20, verbose_name='Payment Frequency')),
                ('is_mandatory', models.BooleanField(default=True, verbose_name='Mandatory Fee')),
                ('due_date_offset', models.PositiveIntegerField(default=0, help_text='Days after enrollment when this fee is due', verbose_name='Due Date Offset (days)')),
                ('description', models.TextField(blank=True, verbose_name='Fee Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fee_structures', to='xcoursefee.course', verbose_name='Course')),
            ],
            options={
                'verbose_name': 'Fee Structure',
                'verbose_name_plural': 'Fee Structures',
                'ordering': ['course', 'fee_type'],
                'unique_together': {('course', 'fee_type')},
            },
        ),
    ]
