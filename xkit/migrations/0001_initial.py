# Generated by Django 5.2.1 on 2025-07-17 13:53

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('xcoursefee', '0002_kit_coursekit_kitfee'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MaterialCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Category Code')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Material Category',
                'verbose_name_plural': 'Material Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Supplier Name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Supplier Code')),
                ('contact_person', models.CharField(max_length=100, verbose_name='Contact Person')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('mobile', models.CharField(blank=True, max_length=20, verbose_name='Mobile Number')),
                ('address', models.TextField(verbose_name='Address')),
                ('city', models.CharField(default='Kuwait City', max_length=100, verbose_name='City')),
                ('country', models.CharField(default='Kuwait', max_length=100, verbose_name='Country')),
                ('trade_license', models.CharField(blank=True, max_length=100, verbose_name='Trade License')),
                ('tax_number', models.CharField(blank=True, max_length=50, verbose_name='Tax Number')),
                ('payment_terms', models.CharField(default='Net 30', max_length=100, verbose_name='Payment Terms')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('blacklisted', 'Blacklisted')], default='active', max_length=20)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('5.00'))], verbose_name='Rating (out of 5)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Material Name')),
                ('material_code', models.CharField(max_length=30, unique=True, verbose_name='Material Code')),
                ('description', models.TextField(verbose_name='Description')),
                ('brand', models.CharField(blank=True, max_length=100, verbose_name='Brand')),
                ('model', models.CharField(blank=True, max_length=100, verbose_name='Model')),
                ('color', models.CharField(blank=True, max_length=50, verbose_name='Color')),
                ('size', models.CharField(blank=True, max_length=50, verbose_name='Size')),
                ('weight', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Weight (kg)')),
                ('unit', models.CharField(choices=[('piece', 'Piece'), ('set', 'Set'), ('kg', 'Kilogram'), ('g', 'Gram'), ('liter', 'Liter'), ('ml', 'Milliliter'), ('meter', 'Meter'), ('cm', 'Centimeter'), ('box', 'Box'), ('pack', 'Pack'), ('bundle', 'Bundle'), ('roll', 'Roll')], default='piece', max_length=20, verbose_name='Unit')),
                ('unit_cost', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Unit Cost (KWD)')),
                ('selling_price', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Selling Price (KWD)')),
                ('current_stock', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))], verbose_name='Current Stock')),
                ('minimum_stock', models.DecimalField(decimal_places=3, default=Decimal('10.000'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))], verbose_name='Minimum Stock Level')),
                ('maximum_stock', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Maximum Stock Level')),
                ('supplier_part_number', models.CharField(blank=True, max_length=100, verbose_name='Supplier Part Number')),
                ('storage_location', models.CharField(blank=True, max_length=100, verbose_name='Storage Location')),
                ('shelf_number', models.CharField(blank=True, max_length=50, verbose_name='Shelf Number')),
                ('status', models.CharField(choices=[('available', 'Available'), ('out_of_stock', 'Out of Stock'), ('discontinued', 'Discontinued'), ('ordered', 'Ordered')], default='available', max_length=20)),
                ('image', models.ImageField(blank=True, upload_to='material_images/', verbose_name='Material Image')),
                ('times_used', models.PositiveIntegerField(default=0, verbose_name='Times Used in Kits')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_materials', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='xkit.materialcategory')),
                ('primary_supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='materials', to='xkit.supplier')),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materials',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MaterialKit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Kit Name')),
                ('kit_code', models.CharField(max_length=30, unique=True, verbose_name='Kit Code')),
                ('description', models.TextField(verbose_name='Kit Description')),
                ('is_template', models.BooleanField(default=False, verbose_name='Template Kit')),
                ('base_cost', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))], verbose_name='Base Cost (KWD)')),
                ('markup_percentage', models.DecimalField(decimal_places=2, default=Decimal('20.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Markup Percentage')),
                ('selling_price', models.DecimalField(decimal_places=3, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Selling Price (KWD)')),
                ('assembly_time_minutes', models.PositiveIntegerField(default=0, verbose_name='Assembly Time (minutes)')),
                ('assembly_instructions', models.TextField(blank=True, verbose_name='Assembly Instructions')),
                ('quality_checklist', models.TextField(blank=True, verbose_name='Quality Checklist')),
                ('kits_in_stock', models.PositiveIntegerField(default=0, verbose_name='Assembled Kits in Stock')),
                ('minimum_kit_stock', models.PositiveIntegerField(default=5, verbose_name='Minimum Kit Stock')),
                ('can_assemble_count', models.PositiveIntegerField(default=0, verbose_name='Can Assemble Count')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('inactive', 'Inactive'), ('discontinued', 'Discontinued')], default='draft', max_length=20)),
                ('auto_calculate_price', models.BooleanField(default=True, verbose_name='Auto Calculate Price from Materials')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kits', to='xkit.materialcategory')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_kits', to=settings.AUTH_USER_MODEL)),
                ('linked_coursefee_kit', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_kit', to='xcoursefee.kit', verbose_name='Linked Course Fee Kit')),
                ('template_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instances', to='xkit.materialkit', verbose_name='Template For')),
            ],
            options={
                'verbose_name': 'Material Kit',
                'verbose_name_plural': 'Material Kits',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='KitAssemblyLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_to_assemble', models.PositiveIntegerField(verbose_name='Quantity to Assemble')),
                ('quantity_completed', models.PositiveIntegerField(default=0, verbose_name='Quantity Completed')),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='in_progress', max_length=20)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('actual_assembly_time', models.PositiveIntegerField(blank=True, null=True, verbose_name='Actual Assembly Time (minutes)')),
                ('quality_check_passed', models.BooleanField(blank=True, null=True, verbose_name='Quality Check Passed')),
                ('quality_notes', models.TextField(blank=True, verbose_name='Quality Notes')),
                ('total_material_cost', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))], verbose_name='Total Material Cost (KWD)')),
                ('labor_cost', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))], verbose_name='Labor Cost (KWD)')),
                ('issues_encountered', models.TextField(blank=True, verbose_name='Issues Encountered')),
                ('materials_shortage', models.TextField(blank=True, verbose_name='Materials Shortage')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assembled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assembled_kits', to=settings.AUTH_USER_MODEL)),
                ('supervised_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_assemblies', to=settings.AUTH_USER_MODEL)),
                ('kit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assembly_logs', to='xkit.materialkit')),
            ],
            options={
                'verbose_name': 'Kit Assembly Log',
                'verbose_name_plural': 'Kit Assembly Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('in', 'Stock In'), ('out', 'Stock Out'), ('adjustment', 'Stock Adjustment'), ('transfer', 'Transfer'), ('return', 'Return'), ('loss', 'Loss/Damage'), ('kit_assembly', 'Kit Assembly')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Quantity')),
                ('stock_before', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))], verbose_name='Stock Before')),
                ('stock_after', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))], verbose_name='Stock After')),
                ('reference_type', models.CharField(choices=[('purchase', 'Purchase Order'), ('sale', 'Sale'), ('kit_assembly', 'Kit Assembly'), ('adjustment', 'Manual Adjustment'), ('transfer', 'Stock Transfer'), ('return', 'Return'), ('loss', 'Loss/Damage')], max_length=20)),
                ('reference_id', models.CharField(blank=True, max_length=100, verbose_name='Reference ID')),
                ('reference_description', models.TextField(verbose_name='Reference Description')),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))], verbose_name='Unit Cost (KWD)')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))], verbose_name='Total Cost (KWD)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='xkit.material')),
            ],
            options={
                'verbose_name': 'Stock Movement',
                'verbose_name_plural': 'Stock Movements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KitMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_needed', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Quantity Needed')),
                ('is_optional', models.BooleanField(default=False, verbose_name='Optional Material')),
                ('notes', models.TextField(blank=True, verbose_name='Usage Notes')),
                ('cost_override', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Cost Override (KWD)')),
                ('assembly_order', models.PositiveIntegerField(default=1, verbose_name='Assembly Order')),
                ('assembly_notes', models.TextField(blank=True, verbose_name='Assembly Notes')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kit_usages', to='xkit.material')),
                ('kit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kit_materials', to='xkit.materialkit')),
            ],
            options={
                'verbose_name': 'Kit Material',
                'verbose_name_plural': 'Kit Materials',
                'ordering': ['assembly_order', 'material__name'],
                'unique_together': {('kit', 'material')},
            },
        ),
    ]
